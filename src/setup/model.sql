create extension pgcrypto;

create unique index user_uniq_idx on users (lower(user_username));

create table categories (
    category_id int generated by default as identity primary key,
    category_name varchar(128) not null
)

create table users (
    user_id int generated by default as identity primary key,
    user_username character varying(50) not null,
    password character varying(60) not null,
    user_surname character varying(30) not null,
    user_joined_at timestamp default current_timestamp
);

create table announcements (
    announcement_id int generated by default as identity primary key,
    announcement_title text not null,
    announcement_content text not null,
    announcement_price decimal(10,2) not null,
    announcement_img varchar(100),
    phone_number varchar(13) not null,
    user_id int not null references users(user_id),
    category_id int not null references categories(category_id)
);

select
    *
from announcements
where user_id = 1;

create table bookmark (
    bookmark_id int generated by default as identity primary key,
    is_active Boolean default true,
    user_id int references users(user_id),
    announcement_id int references announcements(announcement_id)
);

create table questions (
    questions_id int generated by default as identity primary key,
    questions_name varchar(50),
    questions_email varchar(200) not null,
    questions_phone varchar(20),
    questions_content text not null
);

select * from categories;
--------------------------------------------

-- insert into
-- bookmark
--     (user_id, announcement_id)
-- values
--     (11, 8)
-- ;

select
    bookmark_id
from
    bookmark
where announcement_id = 8 and is_active = true;

----------------------JS------------------------

if(bookmark_id > 0) {
    update bookmark set is_active = false where announcement_id = 8;
} else {
    insert into
    bookmark
        (user_id, announcement_id)
    values
        (11, 8)
    ;
}

/bookmark

POST: id

select * from bookmarks where user_id = $1 and product_id = $2;

if (bookmark) {
    res.status(409)
    delete
} else {
    insert
}

/bookmark
get

1, 2

IF (PRODUCT) {
    409
}